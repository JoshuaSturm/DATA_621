# Chunk 1: setup
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
# Chunk 2: load-libraries
library(tidyverse)
library(knitr)
library(kableExtra)
library(corrplot)
# Chunk 3: import-data
crime <- read.csv("crime-evaluation-data_modified.csv", stringsAsFactors = F)
crime.training <- read.csv("crime-training-data_modified.csv", stringsAsFactors = F)
# Chunk 4: data-dictionary
defs <- c("proportion of residential land zoned for large lots (over 25000 square feet)",
"proportion of non-retail business   acres per suburb",
"a dummy var. for whether the suburb borders the Charles River (1) or not (0)",
"nitrogen oxides concentration (parts per 10 million)", "average number of rooms per dwelling",
"proportion of owner-occupied units built prior to 1940",
"weighted mean of distances to five Boston employment centers",
"index of accessibility to radial highways", "full-value property-tax rate per $10,000",
"pupil-teacher ratio by town", "lower status of the population (percent)",
"median value of owner-occupied homes in $1000s")
crime.dict <- data.frame(names(crime), defs, "Outcome variable", stringsAsFactors = F)
names(crime.dict) <- c("Variable Name", "Definition")
# Chunk 5: print-dictionary
kable(crime.dict, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 6: describe
crime.desc <- psych::describe(crime.training)
kable(crime.desc, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 8: summary-boxplot
crime.training.bp <- crime.training %>%
select(-target) %>%
gather()
summary.boxplot <- ggplot(crime.training.bp, aes(x = key, y = value)) +
labs(x = "variable", title = "Crime Data Training Boxplot") +
geom_boxplot(outlier.colour = "red", outlier.shape = 1)
summary.boxplot
# Chunk 9: summar-histogram
crime.training.hist <- ggplot(data = crime.training.bp, mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~key, scales = 'free_x')
crime.training.hist
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
# Chunk 2: load-libraries
library(tidyverse)
library(knitr)
library(kableExtra)
library(corrplot)
# Chunk 3: import-data
crime <- read.csv("crime-evaluation-data_modified.csv", stringsAsFactors = F)
crime.training <- read.csv("crime-training-data_modified.csv", stringsAsFactors = F)
# Chunk 4: data-dictionary
defs <- c("proportion of residential land zoned for large lots (over 25000 square feet)",
"proportion of non-retail business   acres per suburb",
"a dummy var. for whether the suburb borders the Charles River (1) or not (0)",
"nitrogen oxides concentration (parts per 10 million)", "average number of rooms per dwelling",
"proportion of owner-occupied units built prior to 1940",
"weighted mean of distances to five Boston employment centers",
"index of accessibility to radial highways", "full-value property-tax rate per $10,000",
"pupil-teacher ratio by town", "lower status of the population (percent)",
"median value of owner-occupied homes in $1000s")
crime.dict <- data.frame(names(crime), defs, "Outcome variable", stringsAsFactors = F)
names(crime.dict) <- c("Variable Name", "Definition")
# Chunk 5: print-dictionary
kable(crime.dict, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 6: describe
crime.desc <- psych::describe(crime.training)
kable(crime.desc, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 8: summary-boxplot
crime.training.bp <- crime.training %>%
select(-target) %>%
gather()
summary.boxplot <- ggplot(crime.training.bp, aes(x = key, y = value)) +
labs(x = "variable", title = "Crime Data Training Boxplot") +
geom_boxplot(outlier.colour = "red", outlier.shape = 1)
summary.boxplot
# Chunk 9: summar-histogram
crime.training.hist <- ggplot(data = crime.training.bp, mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~key, scales = 'free_x')
crime.training.hist
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
# Chunk 2: load-libraries
library(tidyverse)
library(knitr)
library(kableExtra)
library(corrplot)
# Chunk 3: import-data
crime <- read.csv("crime-evaluation-data_modified.csv", stringsAsFactors = F)
crime.training <- read.csv("crime-training-data_modified.csv", stringsAsFactors = F)
# Chunk 4: data-dictionary
defs <- c("proportion of residential land zoned for large lots (over 25000 square feet)",
"proportion of non-retail business   acres per suburb",
"a dummy var. for whether the suburb borders the Charles River (1) or not (0)",
"nitrogen oxides concentration (parts per 10 million)", "average number of rooms per dwelling",
"proportion of owner-occupied units built prior to 1940",
"weighted mean of distances to five Boston employment centers",
"index of accessibility to radial highways", "full-value property-tax rate per $10,000",
"pupil-teacher ratio by town", "lower status of the population (percent)",
"median value of owner-occupied homes in $1000s")
crime.dict <- data.frame(names(crime), defs, "Outcome variable", stringsAsFactors = F)
names(crime.dict) <- c("Variable Name", "Definition")
# Chunk 5: print-dictionary
kable(crime.dict, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 6: describe
crime.desc <- psych::describe(crime.training)
kable(crime.desc, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 8: summary-boxplot
crime.training.bp <- crime.training %>%
select(-target) %>%
gather()
summary.boxplot <- ggplot(crime.training.bp, aes(x = key, y = value)) +
labs(x = "variable", title = "Crime Data Training Boxplot") +
geom_boxplot(outlier.colour = "red", outlier.shape = 1)
summary.boxplot
# Chunk 9: summary-histogram
crime.training.hist <- ggplot(data = crime.training.bp, mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~key, scales = 'free_x')
crime.training.hist
crime.training.hist <- ggplot(data = crime.training.bp, mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~key, scales = 'free_x')
crime.training.hist
crime.training.hist <- ggplot(data = crime.training.bp, mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~key, scales = 'free_x')
crime.training.bp <- crime.training %>%
select(-target) %>%
gather()
summary.boxplot <- ggplot(crime.training.bp, aes(x = key, y = value)) +
labs(x = "variable", title = "Crime Data Training Boxplot") +
geom_boxplot(outlier.colour = "red", outlier.shape = 1)
load("~/GitHub/DATA_621/Homework 3/.RData")
View(crime.training)
View(crime.dict)
View(crime)
summary(crime$tax)
mode(crime$tax)
crime.training.corr <- crime.training %>%
#select(-target) %>%
na.omit()
corrplot(cor(crime.training.corr), method = "color", type = "lower")
cor.test(crime.training$target, crime.training)
cor.test(crime.training$target)
cor.test(crime.training$target, crime.training$chas)
View(crime.training)
View(crime.training)
apply(crime.training[, -13], 2, cor.test, crime.training$target)
k <- apply(crime.training[, -13], 2, cor.test, crime.training$target)
View(k)
k <- dataframe(apply(crime.training[, -13], 2, cor.test, crime.training$target))
k <- data.frame(apply(crime.training[, -13], 2, cor.test, crime.training$target))
View(k)
kable(names(k), k$zn$statistic)
kable(names(k))
kable(cbind(names(k), k$zn$statistic))
apply(crime.training[, -13], 2, cor.test, crime.training$target)$p.value
View(k)
apply(crime.training[, -13], 2, cor.test$p.value, crime.training$target)
apply(crime.training[, -13], 2, function(x) cor.test$x$p.value, crime.training$target)
apply(crime.training[, -13], 2, cor.test, crime.training$target)
apply(crime.training[, -13], 2, cor.test, crime.training$target, function(x) x$p.value)
apply(crime.training[, -13], 2, cor.test, crime.training$target, function(x){} x$p.value})
apply(crime.training[, -13], 2, cor.test, crime.training$target, function(x){ x$p.value})
unlist(apply(crime.training[, -13], 2, cor.test, crime.training$target))
j <- unlist(apply(crime.training[, -13], 2, cor.test, crime.training$target))
rm(j)
cor(crime.training[, -13], crime.training$target)
kable(cor(crime.training[, -13], crime.training$target))
?kable
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cortable, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
View(k)
list(cor(crime.training[, -13], crime.training$target))
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cortable, format = "latex", booktabs = T, col.names = c("Variable", "Correlation with target")) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cortable, format = "latex", booktabs = T, col.names = "Variable") %>%
kable_styling(latex_options = c("striped", "scale_down"))
apply(crime.training[, -13], 2, function(x){
cor.test(x=x, g=crime.training$target)$p.value
})
apply(crime.training[, -13], 2, function(x){
cor.test(x, g=crime.training$target)$p.value
})
apply(crime.training[, -13], 2, function(x){
cor.test(x, y=crime.training$target)$p.value
})
View(k)
lapply(crime.training[, -13], 2, function(x){
cor.test(x, y=crime.training$target)$p.value
})
sapply(crime.training[, -13], 2, function(x){
cor.test(x, y=crime.training$target)$p.value
})
vapply(crime.training[, -13], 2, function(x){
cor.test(x, y=crime.training$target)$p.value
})
apply(crime.training[, -13], 2, function(x){
cor.test(x, y=crime.training$target)$p.value
})
apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
corp <- apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cbind(corp, cortable), format = "latex", booktabs = T, col.names = c("Variable", "value" )) %>%
kable_styling(latex_options = c("striped", "scale_down"))
class(corp)
typeof(corp)
kable(corp)
kable(double(corp))
double(corp)
as.double(corp)
kable(corp)
kable(as.double(corp))
kable(as.character(corp))
cor(crime.training)
setwd("~/GitHub/DATA_621/Homework 3")
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
corval <- cor(crime.training[, -13])
corp <- apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cbind(as.character(corp), corval, cortable), format = "latex", booktabs = T, col.names = c("P-value", "Correlation with predictors", "Correlation with response")) %>%
kable_styling(latex_options = c("striped"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
# Chunk 2: load-libraries
library(tidyverse)
library(knitr)
library(kableExtra)
library(corrplot)
# Chunk 3: import-data
crime <- read.csv("crime-evaluation-data_modified.csv", stringsAsFactors = F)
crime.training <- read.csv("crime-training-data_modified.csv", stringsAsFactors = F)
# Chunk 4: data-dictionary
defs <- c("proportion of residential land zoned for large lots (over 25000 square feet)",
"proportion of non-retail business   acres per suburb",
"a dummy var. for whether the suburb borders the Charles River (1) or not (0)",
"nitrogen oxides concentration (parts per 10 million)", "average number of rooms per dwelling",
"proportion of owner-occupied units built prior to 1940",
"weighted mean of distances to five Boston employment centers",
"index of accessibility to radial highways", "full-value property-tax rate per $10,000",
"pupil-teacher ratio by town", "lower status of the population (percent)",
"median value of owner-occupied homes in $1000s")
crime.dict <- data.frame(names(crime), defs, "Outcome variable", stringsAsFactors = F)
names(crime.dict) <- c("Variable Name", "Definition")
# Chunk 5: print-dictionary
kable(crime.dict, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 6: describe
crime.desc <- psych::describe(crime.training)
kable(crime.desc, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
# Chunk 8: summary-boxplot
crime.training.bp <- crime.training %>%
select(-target) %>%
gather()
summary.boxplot <- ggplot(crime.training.bp, aes(x = key, y = value)) +
labs(x = "variable", title = "Crime Data Training Boxplot") +
geom_boxplot(outlier.colour = "red", outlier.shape = 1)
summary.boxplot
# Chunk 9: summary-histogram
crime.training.hist <- ggplot(data = crime.training.bp, mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~key, scales = 'free_x')
crime.training.hist
# Chunk 10: summary-correlation-heatmap
crime.training.corr <- crime.training %>%
#select(-target) %>%
na.omit()
corrplot(cor(crime.training.corr), method = "color", type = "lower")
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
corval <- cor(crime.training[, -13])
corp <- apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cbind(as.character(corp), corval, cortable), format = "latex", booktabs = T, col.names = c("P-value", "Correlation with predictors", "Correlation with response")) %>%
kable_styling(latex_options = c("striped"))
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
corval <- cor(crime.training[, -13])
corp <- apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cbind(as.character(corp), corval, cortable), format = "latex", booktabs = T, col.names = c("P-value", "Correlation with predictors", "Correlation with response")) %>%
kable_styling(latex_options = c("striped"))
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
corval <- cor(crime.training[, -13])
corp <- apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cbind(as.character(corp), corval, cortable), format = "latex", booktabs = T, col.names = c("P-value", "Correlation with predictors")) %>%
kable_styling(latex_options = c("striped"))
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
corval <- cor(crime.training[, -13])
corp <- apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cbind(as.character(corp), corval, cortable), format = "latex", booktabs = T, col.names = c("P-value", "Correlation with predictors")) %>%
kable_styling(latex_options = c("striped"))
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
corval <- cor(crime.training[, -13])
corp <- apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cbind(as.character(corp), corval, cortable), format = "latex", booktabs = T, col.names = c("P-value", "Correlation with predictors", "Correlation with response", "h")) %>%
kable_styling(latex_options = c("striped"))
# apply(crime.training[, -13], 2, cor.test, crime.training$target)
corval <- cor(crime.training[, -13])
corp <- apply(crime.training[, -13], 2, function(x) cor.test(x, y=crime.training$target)$p.value)
cortable <- cor(crime.training[, -13], crime.training$target)
kable(cbind(as.character(corp), corval, cortable), format = "latex", booktabs = T, col.names = c("P-value", "Correlation with predictors", "Correlation with response", "h")) %>%
kable_styling(latex_options = c("striped"))
?cbind
View(corval)
cor(crime.training)
apply(crime.training[, -13], 2, cor)
apply(crime.training[, -13], 2, FUN = cor)
apply(crime.training[, -13], 2, cor, crime.training$target)
apply(crime.training[, -13], 2, cor, crime.training[,-13])
rm(corval, k)
View(crime.training)
table(crime.training$zn)
table(crime.training)
apply(crime.training, table)
apply(crime.training, FUN = table)
lapply(crime.training, FUN = table)
k <- lapply(crime.training, FUN = table)
View(k)
kable(k)
class(crime.training)
typeof(crime.training)
lapple(crime.training, class)
lapply(crime.training, class)
crime.training[crime.training$zn == 0]
crime.training[, crime.training$zn == 0]
crime.training[crime.training$zn == 0, ]
sum(crime.training$zn == 0)
sum(crime.training$zn == 0)/sum(crime.training$zn)
sum(crime.training$zn)
dim(crime.training$zn)
shape
dim(crime.training)
View(crime.training)
sum(crime.training)
range(crime.training$zn)
sum(crime.training$zn == 0)/nrow(crime.training$zn)
nrow(crime.training$zn)
NROW(crime.training$zn)
sum(crime.training$zn == 0)/NROW(crime.training$zn)
summary(crime.training$zn)
del(k)
rm(k)
